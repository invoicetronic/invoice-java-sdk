/*
 * Italian eInvoice API
 * The Italian eInvoice API is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. The API also provides advanced features as encryption at rest, invoice validation, multiple upload formats, webhooks, event logging, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@invoicetronic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.invoicetronic.invoice.sdk.api;

import com.invoicetronic.invoice.sdk.ApiException;
import com.invoicetronic.invoice.sdk.model.FatturaOrdinaria;
import java.io.File;
import java.time.OffsetDateTime;
import com.invoicetronic.invoice.sdk.model.ProblemHttpResult;
import com.invoicetronic.invoice.sdk.model.Send;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SendApi
 */
@Disabled
public class SendApiTest {

    private final SendApi api = new SendApi();

    /**
     * Add an invoice by file
     *
     * Send invoices are the invoices that are sent to the SDI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1SendFilesPostTest() throws ApiException {
        List<File> files = null;
        Boolean validate = null;
        String signature = null;
        Send response = api.invoiceV1SendFilesPost(files, validate, signature);
        // TODO: test validations
    }

    /**
     * List invoices
     *
     * test **markdown**.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1SendGetTest() throws ApiException {
        Integer companyId = null;
        String identifier = null;
        String committente = null;
        String prestatore = null;
        String fileName = null;
        OffsetDateTime lastUpdateFrom = null;
        OffsetDateTime lastUpdateTo = null;
        OffsetDateTime dateSentFrom = null;
        OffsetDateTime dateSentTo = null;
        OffsetDateTime documentDateFrom = null;
        OffsetDateTime documentDateTo = null;
        String documentNumber = null;
        Integer page = null;
        Integer pageSize = null;
        List<Send> response = api.invoiceV1SendGet(companyId, identifier, committente, prestatore, fileName, lastUpdateFrom, lastUpdateTo, dateSentFrom, dateSentTo, documentDateFrom, documentDateTo, documentNumber, page, pageSize);
        // TODO: test validations
    }

    /**
     * Get a invoice by id
     *
     * Send invoices are the invoices that are sent to the SDI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1SendIdGetTest() throws ApiException {
        Integer id = null;
        Send response = api.invoiceV1SendIdGet(id);
        // TODO: test validations
    }

    /**
     * Add an invoice by json
     *
     * Send invoices are the invoices that are sent to the SDI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1SendJsonPostTest() throws ApiException {
        FatturaOrdinaria fatturaOrdinaria = null;
        Boolean validate = null;
        String signature = null;
        Send response = api.invoiceV1SendJsonPost(fatturaOrdinaria, validate, signature);
        // TODO: test validations
    }

    /**
     * Add an invoice
     *
     * Send invoices are the invoices that are sent to the SDI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1SendPostTest() throws ApiException {
        Send send = null;
        Boolean validate = null;
        String signature = null;
        Send response = api.invoiceV1SendPost(send, validate, signature);
        // TODO: test validations
    }

    /**
     * Validate an invoice by file
     *
     * Send invoices are the invoices that are sent to the SDI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1SendValidateFilesPostTest() throws ApiException {
        List<File> files = null;
        api.invoiceV1SendValidateFilesPost(files);
        // TODO: test validations
    }

    /**
     * Validate an invoice by json
     *
     * Send invoices are the invoices that are sent to the SDI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1SendValidateJsonPostTest() throws ApiException {
        FatturaOrdinaria fatturaOrdinaria = null;
        api.invoiceV1SendValidateJsonPost(fatturaOrdinaria);
        // TODO: test validations
    }

    /**
     * Validate an invoice
     *
     * Send invoices are the invoices that are sent to the SDI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1SendValidatePostTest() throws ApiException {
        Send send = null;
        api.invoiceV1SendValidatePost(send);
        // TODO: test validations
    }

    /**
     * Validate an invoice by xml
     *
     * Send invoices are the invoices that are sent to the SDI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1SendValidateXmlPostTest() throws ApiException {
        FatturaOrdinaria fatturaOrdinaria = null;
        api.invoiceV1SendValidateXmlPost(fatturaOrdinaria);
        // TODO: test validations
    }

    /**
     * Add an invoice by xml
     *
     * Send invoices are the invoices that are sent to the SDI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1SendXmlPostTest() throws ApiException {
        FatturaOrdinaria fatturaOrdinaria = null;
        Boolean validate = null;
        String signature = null;
        Send response = api.invoiceV1SendXmlPost(fatturaOrdinaria, validate, signature);
        // TODO: test validations
    }

}
