/*
 * Italian eInvoice API
 * The Italian eInvoice API is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. The API also provides advanced features as encryption at rest, invoice validation, multiple upload formats, webhooks, event logging, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@invoicetronic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.invoicetronic.invoice.sdk.api;

import com.invoicetronic.invoice.sdk.ApiException;
import java.time.OffsetDateTime;
import com.invoicetronic.invoice.sdk.model.ProblemHttpResult;
import com.invoicetronic.invoice.sdk.model.Receive;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReceiveApi
 */
@Disabled
public class ReceiveApiTest {

    private final ReceiveApi api = new ReceiveApi();

    /**
     * List incoming invoices
     *
     * Receive invoices are the invoices that are received from other companies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1ReceiveGetTest() throws ApiException {
        Integer companyId = null;
        String identifier = null;
        Boolean unread = null;
        String committente = null;
        String prestatore = null;
        String fileName = null;
        OffsetDateTime lastUpdateFrom = null;
        OffsetDateTime lastUpdateTo = null;
        OffsetDateTime dateSentFrom = null;
        OffsetDateTime dateSentTo = null;
        OffsetDateTime documentDateFrom = null;
        OffsetDateTime documentDateTo = null;
        String documentNumber = null;
        Integer page = null;
        Integer pageSize = null;
        List<Receive> response = api.invoiceV1ReceiveGet(companyId, identifier, unread, committente, prestatore, fileName, lastUpdateFrom, lastUpdateTo, dateSentFrom, dateSentTo, documentDateFrom, documentDateTo, documentNumber, page, pageSize);
        // TODO: test validations
    }

    /**
     * Delete an incoming invoice by id
     *
     * Receive invoices are the invoices that are received from other companies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1ReceiveIdDeleteTest() throws ApiException {
        Integer id = null;
        Receive response = api.invoiceV1ReceiveIdDelete(id);
        // TODO: test validations
    }

    /**
     * Get an incoming invoice by id
     *
     * Receive invoices are the invoices that are received from other companies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invoiceV1ReceiveIdGetTest() throws ApiException {
        Integer id = null;
        Receive response = api.invoiceV1ReceiveIdGet(id);
        // TODO: test validations
    }

}
